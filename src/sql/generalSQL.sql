CREATE USER PAYMENT1 IDENTIFIED BY PAYMENT1;
ALTER USER PAYMENT1
DEFAULT TABLESPACE SYSTEM
TEMPORARY TABLESPACE TEMP
ACCOUNT UNLOCK;

-- QUOTAS
ALTER USER PAYMENT1 QUOTA UNLIMITED ON USERS;

-- ROLES
GRANT CONNECT, RESOURCE TO PAYMENT1;
ALTER USER PAYMENT1 DEFAULT ROLE CONNECT, RESOURCE;

-- GRANT
GRANT ALTER USER TO PAYMENT1;
GRANT CREATE TABLE, CREATE VIEW TO PAYMENT1;
GRANT GRANT ANY OBJECT PRIVILEGE, GRANT ANY ROLE, GRANT ANY PRIVILEGE TO PAYMENT1;

--DROP TABLE PAYMENT1.Order_Product;
--DROP TABLE PAYMENT1.customer_order;
--DROP TABLE PAYMENT1.CUSTOMER;
--DROP TABLE PAYMENT1.PRODUCT;


CREATE TABLE PAYMENT1.CUSTOMER (
  customer_id NUMBER(20),
  first_name  VARCHAR2(30) NOT NULL,
  last_name   VARCHAR2(30) NOT NULL,
  card_number NUMBER(30) UNIQUE NOT NULL,
  CONSTRAINT PK_Customer_ID PRIMARY KEY (customer_id)
);

CREATE TABLE PAYMENT1.customer_order (
  order_id    NUMBER(20),
  date_order  DATE NOT NULL,
  customer_id NUMBER(20),
  CONSTRAINT PK_Order_ID PRIMARY KEY (order_id),
  CONSTRAINT FK_Order_CustomerID FOREIGN KEY (customer_id) REFERENCES
  PAYMENT1.CUSTOMER (customer_id)
);

CREATE TABLE PAYMENT1.PRODUCT (
  product_id   NUMBER(20),
  name_product VARCHAR2(50)   NOT NULL,
  cost_product NUMBER(10, 2) NOT NULL,
  CONSTRAINT PK_Product_ID PRIMARY KEY (product_id)
);

CREATE TABLE PAYMENT1.Order_Product (
  ID         NUMBER(20),
  order_id   NUMBER(20),
  product_id NUMBER(20),
  CONSTRAINT PK_ID PRIMARY KEY (ID),
  CONSTRAINT FK_ID_OrderID FOREIGN KEY (order_id) REFERENCES
  PAYMENT1.customer_order (order_id),
  CONSTRAINT FK_ID_ProductID FOREIGN KEY (product_id) REFERENCES
  PAYMENT1.PRODUCT (product_id)
);


INSERT INTO PAYMENT1.CUSTOMER(CUSTOMER_ID, FIRST_NAME, LAST_NAME, CARD_NUMBER) VALUES
(1, 'Ivan', 'Ivanov', 2341);
INSERT INTO PAYMENT1.CUSTOMER(CUSTOMER_ID, FIRST_NAME, LAST_NAME, CARD_NUMBER) VALUES
(2, 'Alice','Melnikova', 31743);
INSERT INTO PAYMENT1.CUSTOMER(CUSTOMER_ID, FIRST_NAME, LAST_NAME, CARD_NUMBER) VALUES
(3,  'Vladimir', 'Sidorov', 7575);

INSERT INTO PAYMENT1.PRODUCT (
  PRODUCT_ID, NAME_PRODUCT, COST_PRODUCT
)
VALUES (1, 'TV', 10000);
INSERT INTO PAYMENT1.PRODUCT(PRODUCT_ID, NAME_PRODUCT, COST_PRODUCT) VALUES
(2, 'Computer', 30000.5);
INSERT INTO PAYMENT1.PRODUCT(PRODUCT_ID, NAME_PRODUCT, COST_PRODUCT) VALUES
(3, 'Phone', 9800);

INSERT INTO PAYMENT1.CUSTOMER_ORDER(ORDER_ID, DATE_ORDER, CUSTOMER_ID) VALUES
(1, '10/03/2016', 1);
INSERT INTO PAYMENT1.CUSTOMER_ORDER(ORDER_ID, DATE_ORDER, CUSTOMER_ID) VALUES
(2, '10/02/2016', 2);

INSERT INTO PAYMENT1.ORDER_PRODUCT(ID, ORDER_ID, PRODUCT_ID) VALUES
(1, 1, 2);
INSERT INTO PAYMENT1.ORDER_PRODUCT(ID, ORDER_ID, PRODUCT_ID) VALUES
(2, 1, 3);
INSERT INTO PAYMENT1.ORDER_PRODUCT(ID, ORDER_ID, PRODUCT_ID) VALUES
(3, 2, 1);
INSERT INTO PAYMENT1.ORDER_PRODUCT(ID, ORDER_ID, PRODUCT_ID) VALUES
(4, 2, 3);


